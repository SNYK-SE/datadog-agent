---
<%
  ENV['AZURE_LOCATION'] ||= "North Central US"
%>

driver:
  name: azurerm

driver_config:
  subscription_id: <%= ENV['AZURE_SUBSCRIPTION_ID'] %>
  location: <%= ENV['AZURE_LOCATION'] %>

transport:
  ssh_key: <%= ENV['AZURE_SSH_KEY_PATH'] %>

provisioner:
  product_name: chef
  product_version: 12.2.1

platforms:
# Loop through two lists and output a total matrix of all possible platform + chef versions,
# for both drivers
<% azure_test_platforms = [
      ['ubuntu-16-04','Canonical:UbuntuServer:16.04.0-LTS:16.04.201611150'],
      ['ubuntu-14-04', 'Canonical:UbuntuServer:14.04.5-LTS:14.04.201711151'],
      ['centos-69', 'OpenLogic:CentOS:6.9:6.9.20170612'],
      ['centos-74', 'OpenLogic:CentOS:7.4:7.4.20171110'],
      ['debian-7', "credativ:Debian:7:7.0.201701180"], # ID for debian 7.10 - string ID unavailable
      ['debian-8', "credativ:Debian:8:8.0.201712040"],  # ID of a debian 8 image with sudo
    ]
    chef_versions = %w(
      12.2.1
    )

    sizes = %w(
      Standard_A1
      Standard_D1
    )

    # we wanna spread out our quotas
    locations = [
      "North Central US",
      "Central US",
      "West Central US",
      "West US",
      "West US 2",
    ]

    drivers = %w(
      azurerm
    )

    platforms_x64 = azure_test_platforms.product(chef_versions, drivers).select{|p, c, d| not p[0].include? "i386"}.collect{|p, c, d| p[0] + "-" + c + "-" + d}

    idx = 0
    azure_test_platforms.product(chef_versions).each do |platform, chef_version|
    idx += 1
    size = sizes[idx % sizes.length]
    location = locations[idx % locations.length]
%>
- name: <%= platform[0] %>-<%= chef_version %>-azurerm
  driver_config:
    machine_size: <%= size %>
    image_urn: <%= platform[1] %>
    location: <%= location %>
    vm_name: dd-agent-testing-<%= platform[0] %>-<%= chef_version %>-azure
    server_name: dd-agent-testing-<%= platform[0] %>-<%= chef_version %>
<% end %>

suites:

# Install the latest release candidate using Chef
- name: dd-agent-x64
  includes:
     <% platforms_x64.each do |platform| %>
    - <%= platform %>
     <% end %>
  run_list:
    - "recipe[datadog::dd-agent]"
  attributes:
    datadog: &dd-agent-conf-x64
      api_key: &api_key aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
      # The api key needs to be 32 characters long
      application_key: &application_key e45ba67f18ba5b73799b8a7834f2cdfc7c691821
      # For testing pre-release agent
      url: &staging_url https://app.datad0g.com
      aptrepo: &testing_apt_repo http://apttesting.datad0g.com/
      aptrepo_dist: testing
      yumrepo: http://yumtesting.datad0g.com/testing/x86_64/

# Installs the latest release Agent, then updates it to the latest release
# candidate
- name: dd-agent-upgrade-x64
  includes:
     <% platforms_x64.each do |platform| %>
    - <%= platform %>
     <% end %>
  run_list:
    - "recipe[datadog::dd-agent]"
    - "recipe[dd-agent-upgrade]"
  attributes:
    datadog:
      <<: *dd-agent-conf-x64
      # Get the latest release agents. The upgrade recipe will take care of
      # adding the staging repo and upgrading to the latest candidate
      aptrepo: http://apt.datadoghq.com/
      aptrepo_dist: stable
      yumrepo: http://yum.datadoghq.com/rpm/x86_64/
    dd-agent-upgrade: &dd-agent-upgrade-conf-x64
      add_new_repo: true
      aptrepo: *testing_apt_repo
      aptrepo_dist: testing
      yumrepo: http://yumtesting.datad0g.com/testing/x86_64/
    dd-agent-upgrade-rspec:
      # Used by the rspec test to know the version to which the agent should be upgraded
      agent_expected_version: &agent_expected_version <%= ENV['DD_AGENT_EXPECTED_VERSION'] || "5.99.0" %>

# Installs the latest release candidate using the install script
- name: dd-agent-install-script
  run_list:
    - "recipe[dd-agent-install-script]"
  attributes:
    dd-agent-install-script:
      api_key: *api_key
      install_candidate: true

# Installs the latest release candidate using the step-by-step instructions (on dogweb)
- name: dd-agent-step-by-step
  run_list:
    - "recipe[dd-agent-step-by-step]"
  attributes:
    dd-agent-step-by-step:
      api_key: *api_key
      install_candidate: true

- name: benchmark_dogstatsd
  includes:
     <% platforms_x64.each do |platform| %>
    - <%= platform %>
     <% end %>
  run_list:
    - "recipe[datadog::dd-agent]"
  attributes:
    datadog:
      api_key: *api_key
      application_key: *application_key
      # For testing pre-release agent
      url: *staging_url
      aptrepo: *testing_apt_repo
      aptrepo_dist: testing
      yumrepo: http://yumtesting.datad0g.com/testing/x86_64/
